# NetworkPolicy для разграничения трафика между сервисами front-end <-> back-end-api
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-backend-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      role: front-end
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: back-end-api
  egress:
    - to:
        - podSelector:
            matchLabels:
              role: back-end-api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-frontend-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      role: back-end-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: front-end
  egress:
    - to:
        - podSelector:
            matchLabels:
              role: front-end

# NetworkPolicy для разграничения трафика между сервисами admin-front-end <-> admin-back-end-api
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: admin-frontend-backend-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      role: admin-front-end
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: admin-back-end-api
  egress:
    - to:
        - podSelector:
            matchLabels:
              role: admin-back-end-api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: admin-backend-frontend-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      role: admin-back-end-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: admin-front-end
  egress:
    - to:
        - podSelector:
            matchLabels:
              role: admin-front-end
